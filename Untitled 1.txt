
# Создаем табличку Жанров
CREATE TABLE IF NOT EXISTS Genres(
 	id serial primary key,
 	genre_name varchar(50) not null unique);


# Создаем таблицу Списка исполнителей
CREATE TABLE IF NOT EXISTS List_of_perfomens (
	id serial primary key,
	name varchar(80) not null unique);
	id_genre integer references Generes(id));


# Промежуточная таблица Жанр/Исполнитель
CREATE TABLE IF NOT EXISTS Genere_Perfomens (
	id_performer integer references List_of_perfomens(id)
	id_genere integer references Generes(id));


#Создаем таблицу содержащую альбомы исполнителя
CREATE TABLE IF NOT EXISTS Albums (
	id serial primary key,
	id_performer integer references List_of_perfomens(id),
	album_mame varchar(100) not null,
	year integer);


# Промежуточная таблица Исполнитель/Альбом
CREATE TABLE IF NOT EXISTS Perfomens_Album (
	id_album integer reference Almums(id),
	id_performer integer references List_of_perfomens(id);


# Создаем таблицу сборников
CREATE TABLE IF NOT EXISTS Collection (
	id serial primary key,
	collection_name varchar(100) not null,
	year integer);


# Таблица с треками
CREATE TABLE IF NOT EXISTS Tracks (
	id serial primary key,
	id_album integer references Almums(id),
	track_name name varchar(100) not null,
	duration integer not null,


# Промежуточная таблица Сборник/Треки 
CREATE TABLE IF NOT EXISTS Colection_Tracks (
	id_track integer references Tracks(id)
	id_collection integer references Collection(id)








